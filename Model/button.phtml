
<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
 //DPT XiPay Authorization Test

include_once("XiPaySoapClient.php");
include_once("Transaction.php");


$XiPay = new XiPaySoapClient( "https://qa03.xipaynet.com/PMXiGGE/XiPay30WS.asmx", //XiPay Web Service URL
                              "paymetric\\user id",    //user ID
                              "password"); //password

//
//Setup trace if needed
//
$XiPay->Trace = true;
$XiPay->TraceFile = "trace.txt"; //trace to a file. If TraceFile not set, trace to console!

//
//Build transaction structure
//See Web Service integration guide or WS WSDL for all properties to set.
//


$transaction = new Transaction();
$transaction->Amount = 2704.99;
$transaction->CardExpirationDate = "02/17";
$transaction->CardNumber = "4444333322221111";
$transaction->CardPresent = 0;
$transaction->CurrencyKey = "USD";
$transaction->MerchantID = "003200027997";



$authResponse = $XiPay->Authorize($transaction);

//
//$authResponse is a SimpleXML structure one can access to all memebers and update
//his/her own database for settlement at a later time.
//If server throws an exception (soap error), $authResponse will be the error message string.
//

echo "\nPHP Sample Integration Code - Authorize";


if ($authResponse->Status == STATUS_OK)
{
    //
    //This is the authorized transaction (fully constructed) that comes back from authorization call.
    //Client needs to persist this transaction to somewhere in the database for capture and settle
    //later in the workflow.
    //
     $authorized = $authResponse->Transaction;

    echo "\nTransaction ID: " . $authorized->TransactionID;
    echo " Status Code: " . $authorized->StatusCode;
  echo " Message: " . $authorized->Message ."\n";
}else{
   
    //Log the error
   
    echo "\nError Code: " . $authResponse->Status . "\n";
    echo $authResponse->Message . "\n";
}
?>
<button type="submit" title="<?php echo $this->__('Place Order') ?>" class="button btn-checkout" onclick="review.save();"><span><span><?php echo $this->__('Place Order') ?></span></span></button>
